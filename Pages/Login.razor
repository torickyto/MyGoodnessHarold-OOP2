@page "/login"
@using MyGoodnessHarold.Data;
@using MySqlConnector;
@inject NavigationManager NavigationManager

<div class="login-container">
    <link href="css/Login.css" rel="stylesheet">

    <div class="header">
        <span class="title">Harold POS</span>
    </div>

    <div class="login-box">
        <div class="branding">
            <img src="Images/myGoodnessHarold.jpg" alt="My Goodness Harold logo" />

        </div>
        <div class="pin-entry">
            <label for="pinInput">Enter your PIN</label>
            <input id="pinInput" type="password" maxlength="4" @bind="userPin" />
            @*TEMPORARY VALUE CHECK*@
            <div class="pin-display">
                <label for="pinDisplay">TEST</label>
                <input id="pinDisplay" type="text" readonly value="@userPin" />
            </div>
            @*TEMPORARY VALUE CHECK*@
            <div class="pin-buttons">
                @for (int i = 1; i <= 9; i++)
                {
                    int localValue = i;
                    <button @onclick="() => AddDigit(localValue.ToString())">@localValue</button>
                }
                <button @onclick="ClearPin">X</button>
                <button @onclick="() => AddDigit(0.ToString())">0</button>
                <button @onclick="SubmitPin">→</button>
            </div>
        </div>
    </div>
</div>

@code {
    private string userPin = "";
    private Employee loggedInEmployee;

    private void AddDigit(string digit)
    {
        if (userPin.Length < 4)
        {
            userPin += digit;
        }
    }

    private void ClearPin()
    {
        if (userPin.Length > 0)
        {
            userPin = userPin[0..^1];
        }
    }

    private async Task SubmitPin()
    {
        if (!string.IsNullOrEmpty(userPin) && userPin.Length == 4)
        {
            bool isValidPin = LoginHelper.ValidatePin(userPin, out loggedInEmployee);

            if (isValidPin)
            {
                // Successfully logged in
                Console.WriteLine($"PIN Entered: {userPin}");
                Console.WriteLine($"Employee Logged In: {loggedInEmployee}");

                NavigationManager.NavigateTo("/productmanagement");
            }
            else
            {
                Console.WriteLine("Invalid PIN");
            }
        }
        else
        {
            Console.WriteLine("Invalid PIN");
        }
        await Task.Delay(100);
    }
}