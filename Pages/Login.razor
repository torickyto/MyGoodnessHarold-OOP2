@page "/"
@using MyGoodnessHarold.Data;
@using MySqlConnector;
@inject NavigationManager NavigationManager
@inject UserStateService userStateService

<div class="login-container">
    <link href="css/Login.css" rel="stylesheet">

    <div class="header">
        <span class="title">Harold POS</span>
    </div>

    <div class="login-box">
        <div class="branding">
            <img src="Images/myGoodnessHarold.png" alt="My Goodness Harold logo" />

        </div>

        <div class="pin-entry">
            <label for="pinInput">Enter your PIN</label>
            <input id="pinInput" type="password" maxlength="4" @bind="userPin" />
            <div class="pin-buttons">
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="error-overlay" @onclick="DismissError">
                        <div class="error-message">@errorMessage</div>
                    </div>
                }
                @for (int i = 1; i <= 9; i++)
                {
                    int localValue = i;
                    <button @onclick="() => AddDigit(localValue.ToString())">@localValue</button>
                }
                <button @onclick="ClearPin">X</button>
                <button @onclick="() => AddDigit(0.ToString())">0</button>
                <button @onclick="SubmitPin">→</button>
            </div>
        </div>
    </div>
</div>

@code {
    private string userPin = "";
    private Employee loggedInEmployee;
    private string errorMessage = "";

    private void AddDigit(string digit)
    {
        if (userPin.Length < 4)
        {
            userPin += digit;
        }
    }

    private void ClearPin()
    {
        if (userPin.Length > 0)
        {
            userPin = userPin[0..^1];
        }
    }

    private async void SubmitPin()
    {
        if (!string.IsNullOrEmpty(userPin) && userPin.Length == 4)
        {
            bool isValidPin = LoginHelper.ValidatePin(userPin, out loggedInEmployee);

            if (isValidPin)
            {
                userStateService.SetCurrentUser(loggedInEmployee.FirstName);
                NavigationManager.NavigateTo("/menu", true);
            }
            else
            {
                errorMessage = "Invalid PIN. Please try again.";
            }
        }
        else
        {
            errorMessage = "Invalid PIN. Please try again.";
        }
        await Task.Delay(100);
    }
    private void DismissError()
    {
        errorMessage = "";
    }

}