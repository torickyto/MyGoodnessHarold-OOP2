<!-- Login Page
This Razor page is the login interface for the MyGoodnessHarold application.
It prompts users for a PIN input to authenticate and grants access to the main menu page in the POS system when successfully loging in.
The login view is styled using a dedicated CSS file and includes error handling for invalid PIN entries.
Navigation to the main menu happens when the system validates the user's PIN. -->
@page "/"
@using MyGoodnessHarold.Data;
@using MySqlConnector;
@inject NavigationManager NavigationManager
@inject UserStateService userStateService

@*
    Team members: Grady Spurrill, Ricky To, Logan Hoppen
  POS Menu System for "My Goodness Harold" Kitchen

  This POS (Point of Sale) menu system is designed to facilitate the ordering process for a kitchen environment.
  It displays a list of food items retrieved from a database, allowing kitchen staff or customers to place orders.
  Users are greeted by name and can view the current time. They can add items to their order by interacting with the menu,
  which updates a running total including tax. The system supports item selection, quantity updates, and order finalization.
  Once an order is finalized, a message is displayed, and there is an option to print the order. The interface is intuitive,
  ensuring a smooth ordering experience.
 *@

<div class="login-container">
    <!-- Link to the CSS stylesheet for styling the login page -->
    <link href="css/Login.css" rel="stylesheet">

    <div class="header">
        <span class="title">Harold POS</span>
    </div>
    <!-- Login Box for PIN Entry -->
    <div class="login-box">
        <div class="branding">
            <img src="Images/myGoodnessHarold.png" alt="My Goodness Harold logo" />

        </div>
        <!-- PIN Entry Section -->
        <div class="pin-entry">
            <label for="pinInput">Enter your PIN</label>
            <input id="pinInput" type="password" maxlength="4" @bind="userPin" />
            <div class="pin-buttons">
                <!-- Error Message Overlay -->
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="error-overlay" @onclick="DismissError">
                        <div class="error-message">@errorMessage</div>
                    </div>
                }
                @for (int i = 1; i <= 9; i++)
                {
                    int localValue = i;
                    <button @onclick="() => AddDigit(localValue.ToString())">@localValue</button>
                }
                <!-- Clear and Submit Buttons -->
                <button @onclick="ClearPin">X</button>
                <button @onclick="() => AddDigit(0.ToString())">0</button>
                <button @onclick="SubmitPin">→</button>
            </div>
        </div>
    </div>
</div>

@code {
    private string userPin = "";
    private Employee loggedInEmployee;
    private string errorMessage = "";

    // Method to Append a Digit to the PIN
    private void AddDigit(string digit)
    {
        if (userPin.Length < 4)
        {
            userPin += digit;
        }
    }

    // Method to Remove the Last Digit from the PIN
    private void ClearPin()
    {
        if (userPin.Length > 0)
        {
            userPin = userPin[0..^1];
        }
    }

    // Method to Submit the PIN for Validation
    private async void SubmitPin()
    {
        if (!string.IsNullOrEmpty(userPin) && userPin.Length == 4)
        {
            bool isValidPin = LoginHelper.ValidatePin(userPin, out loggedInEmployee);

            if (isValidPin)
            {
                userStateService.SetCurrentUser(loggedInEmployee.FirstName);
                NavigationManager.NavigateTo("/menu", true);
            }
            else
            {
                errorMessage = "Invalid PIN. Please try again.";
            }
        }
        else
        {
            errorMessage = "Invalid PIN. Please try again.";
        }
        await Task.Delay(100);
    }

    // Method to Dismiss the Error Message
    private void DismissError()
    {
        errorMessage = "";
    }

}